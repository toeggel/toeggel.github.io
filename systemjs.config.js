// map tells the System loader where to look for things
var map = {
    "app": "",
    "@angular": "vendor/@angular",
    "rxjs": "vendor/rxjs",
    "vendor": "vendor",
};
// packages tells the System loader how to load when no filename and/or no extension
var packages = {
    "app": { main: "main.js", defaultExtension: "js" },
    "rxjs": { defaultExtension: "js" },
};
var ngPackageNames = [
    "common",
    "compiler",
    "core",
    "forms",
    "http",
    "platform-browser",
    "platform-browser-dynamic",
    "router",
    "router-deprecated",
    "upgrade",
];
// Individual files (~300 requests):
function packIndex(pkgName) {
    packages["@angular/" + pkgName] = { main: "index.js", defaultExtension: "js" };
}
// Bundled (~40 requests):
function packUmd(pkgName) {
    packages["@angular/" + pkgName] = { main: "/bundles/" + pkgName + ".umd.js", defaultExtension: "js" };
}
// Most environments should use UMD; some (Karma) need the individual index files
var setPackageConfig = System.packageWithIndex ? packIndex : packUmd;
// Add package entries for angular packages
ngPackageNames.forEach(setPackageConfig);
System.config({
    map: map,
    packages: packages,
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9zeXN0ZW1qcy5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELElBQU0sR0FBRyxHQUFHO0lBQ1YsS0FBSyxFQUFFLEVBQUU7SUFDVCxVQUFVLEVBQUUsaUJBQWlCO0lBQzdCLE1BQU0sRUFBRSxhQUFhO0lBQ3JCLFFBQVEsRUFBRSxRQUFRO0NBQ25CLENBQUM7QUFFRixvRkFBb0Y7QUFDcEYsSUFBTSxRQUFRLEdBQUc7SUFDZixLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRTtJQUNuRCxNQUFNLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUU7Q0FDbkMsQ0FBQztBQUVGLElBQU0sY0FBYyxHQUFHO0lBQ3JCLFFBQVE7SUFDUixVQUFVO0lBQ1YsTUFBTTtJQUNOLE9BQU87SUFDUCxNQUFNO0lBQ04sa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLFNBQVM7Q0FDVixDQUFDO0FBQ0Ysb0NBQW9DO0FBQ3BDLG1CQUFtQixPQUFPO0lBQ3hCLFFBQVEsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBRSxDQUFDO0FBQ2pGLENBQUM7QUFDRCwwQkFBMEI7QUFDMUIsaUJBQWlCLE9BQU87SUFDdEIsUUFBUSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxXQUFXLEdBQUcsT0FBTyxHQUFHLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsQ0FBQztBQUN4RyxDQUFDO0FBS0QsaUZBQWlGO0FBQ2pGLElBQUksZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixHQUFHLFNBQVMsR0FBRyxPQUFPLENBQUM7QUFDckUsMkNBQTJDO0FBQzNDLGNBQWMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUV6QyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ1osR0FBRyxFQUFFLEdBQUc7SUFDUixRQUFRLEVBQUUsUUFBUTtDQUNuQixDQUFDLENBQUMiLCJmaWxlIjoiY2xpZW50L3N5c3RlbWpzLmNvbmZpZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1hcCB0ZWxscyB0aGUgU3lzdGVtIGxvYWRlciB3aGVyZSB0byBsb29rIGZvciB0aGluZ3NcbmNvbnN0IG1hcCA9IHtcbiAgXCJhcHBcIjogXCJcIixcbiAgXCJAYW5ndWxhclwiOiBcInZlbmRvci9AYW5ndWxhclwiLFxuICBcInJ4anNcIjogXCJ2ZW5kb3Ivcnhqc1wiLFxuICBcInZlbmRvclwiOiBcInZlbmRvclwiLFxufTtcblxuLy8gcGFja2FnZXMgdGVsbHMgdGhlIFN5c3RlbSBsb2FkZXIgaG93IHRvIGxvYWQgd2hlbiBubyBmaWxlbmFtZSBhbmQvb3Igbm8gZXh0ZW5zaW9uXG5jb25zdCBwYWNrYWdlcyA9IHtcbiAgXCJhcHBcIjogIHsgbWFpbjogXCJtYWluLmpzXCIsIGRlZmF1bHRFeHRlbnNpb246IFwianNcIiB9LFxuICBcInJ4anNcIjogeyBkZWZhdWx0RXh0ZW5zaW9uOiBcImpzXCIgfSxcbn07XG5cbmNvbnN0IG5nUGFja2FnZU5hbWVzID0gW1xuICBcImNvbW1vblwiLFxuICBcImNvbXBpbGVyXCIsXG4gIFwiY29yZVwiLFxuICBcImZvcm1zXCIsXG4gIFwiaHR0cFwiLFxuICBcInBsYXRmb3JtLWJyb3dzZXJcIixcbiAgXCJwbGF0Zm9ybS1icm93c2VyLWR5bmFtaWNcIixcbiAgXCJyb3V0ZXJcIixcbiAgXCJyb3V0ZXItZGVwcmVjYXRlZFwiLFxuICBcInVwZ3JhZGVcIixcbl07XG4vLyBJbmRpdmlkdWFsIGZpbGVzICh+MzAwIHJlcXVlc3RzKTpcbmZ1bmN0aW9uIHBhY2tJbmRleChwa2dOYW1lKSB7XG4gIHBhY2thZ2VzW1wiQGFuZ3VsYXIvXCIgKyBwa2dOYW1lXSA9IHsgbWFpbjogXCJpbmRleC5qc1wiLCBkZWZhdWx0RXh0ZW5zaW9uOiBcImpzXCIgfTtcbn1cbi8vIEJ1bmRsZWQgKH40MCByZXF1ZXN0cyk6XG5mdW5jdGlvbiBwYWNrVW1kKHBrZ05hbWUpIHtcbiAgcGFja2FnZXNbXCJAYW5ndWxhci9cIiArIHBrZ05hbWVdID0geyBtYWluOiBcIi9idW5kbGVzL1wiICsgcGtnTmFtZSArIFwiLnVtZC5qc1wiLCBkZWZhdWx0RXh0ZW5zaW9uOiBcImpzXCIgfTtcbn1cblxuLyoqIFR5cGUgZGVjbGFyYXRpb24gZm9yIGFtYmllbnQgU3lzdGVtLiAqL1xuZGVjbGFyZSB2YXIgU3lzdGVtOiBhbnk7XG5cbi8vIE1vc3QgZW52aXJvbm1lbnRzIHNob3VsZCB1c2UgVU1EOyBzb21lIChLYXJtYSkgbmVlZCB0aGUgaW5kaXZpZHVhbCBpbmRleCBmaWxlc1xubGV0IHNldFBhY2thZ2VDb25maWcgPSBTeXN0ZW0ucGFja2FnZVdpdGhJbmRleCA/IHBhY2tJbmRleCA6IHBhY2tVbWQ7XG4vLyBBZGQgcGFja2FnZSBlbnRyaWVzIGZvciBhbmd1bGFyIHBhY2thZ2VzXG5uZ1BhY2thZ2VOYW1lcy5mb3JFYWNoKHNldFBhY2thZ2VDb25maWcpO1xuXG5TeXN0ZW0uY29uZmlnKHtcbiAgbWFwOiBtYXAsXG4gIHBhY2thZ2VzOiBwYWNrYWdlcyxcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
